test:
  suites:
  - name: Cloud AutoML Vision Model API IT
    setup:
    - code: cloud_region = "us-central1"
      # Read Project ID from Environment Variable
    - env:
        name: GOOGLE_PROJECT_ID
        variable: project_id
    - env:
        name: MODEL_ID
        variable: model_id
    - env:
        name: MODEL_DISPLAY_NAME
        variable: model_display_name
    cases:
    - name: List Model
      spec:
      - call: 
          sample: automl_vision_list_models
          params: 
            location: { variable: cloud_region }
            project_id: { variable: project_id }
            filter: { literal: "" }
      - assert_contains:
        - literal: "Model name:"
        - literal: "Training budget:"
        - literal: "Training cost:"


    - name: Get Model
      spec:
      - call: 
          sample: automl_vision_get_model
          params: 
            location: { variable: cloud_region }
            project_id: { variable: project_id }
            model_id: { variable: model_id }
      - assert_contains:
        - literal: "Model display name:"
        - variable: model_display_name

    # TODO - listModelEvaluations
    - name: List Model Evaluations
      spec:
      - call:
          sample: automl_vision_list_model_evaluations
          params: 
            location: { variable: cloud_region }
            project_id: { variable: project_id }
            model_id: { variable: model_id }
            filter: { literal: "" }
      - extract_match:
          pattern: modelEvaluations\/(\d+)
          variable: model_eval_id
      #- log: ["Matched model eval id: %s", model_eval_id]
      - assert_contains:
        - literal: "name:"
        - variable: model_eval_id
    # TODO - getModelEvaluation
    - name: Get Model Evaluation
      spec:
      - call:
          sample: automl_vision_list_model_evaluations
          params: 
            location: { variable: cloud_region }
            project_id: { variable: project_id }
            model_id: { variable: model_id }
            filter: { literal: "" }
      - extract_match:
          pattern: modelEvaluations\/(\d+)
          variable: model_eval_id
      - call: 
          sample: automl_vision_get_model_evaluation
          params:
            location: { variable: cloud_region }
            project_id: { variable: project_id }
            model_id: { variable: model_id }
            model_eval_id: { variable: model_eval_id }
      - log: ["Matched dataset_id: %s", model_eval_id]
      - assert_contains:
        - literal: "name:"
        - variable: model_eval_id
        - literal: "display_name"
        - literal: "wave"

